<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on rsatiwari-tech notes</title>
        <link>https://rsatiwari.com/posts/</link>
        <description>Recent content in Posts on rsatiwari-tech notes</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Fri, 10 Mar 2023 07:26:31 +1100</lastBuildDate>
        <atom:link href="https://rsatiwari.com/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>ssh-pat-issues-ADO Repos</title>
            <link>https://rsatiwari.com/posts/ssh-pat-ado-issues/</link>
            <pubDate>Fri, 10 Mar 2023 07:26:31 +1100</pubDate>
            
            <guid>https://rsatiwari.com/posts/ssh-pat-ado-issues/</guid>
            <description>I recently was working on a new machine (Windows) and had to setup all the software and configuration on it.
It has been while and kept getting this issue when I installed or tried to follow ssh auth method for ADO repos.
I went through some troubleshooting and one of the errors was as below.
Issue:
Solution:
Open PowerShell as an administrator by right-clicking the start menu and selecting &amp;ldquo;Windows PowerShell (Admin)&amp;rdquo;.</description>
            <content type="html"><![CDATA[<p>I recently was working on a new machine (Windows) and had to setup all the software and configuration on it.</p>
<p>It has been while and kept getting this issue when I installed or tried to follow ssh auth method for ADO repos.</p>
<p>I went through some troubleshooting and one of the errors was as below.</p>
<p>Issue:</p>

    <img src="../images/ssh-pat-ado-issues-01.PNG"  class="left"  />


<p>Solution:</p>
<ol>
<li>
<p>Open PowerShell as an administrator by right-clicking the start menu and selecting &ldquo;Windows PowerShell (Admin)&rdquo;.</p>
</li>
<li>
<p>Generate SSH Key using the below command    <br>
<code>ssh-keygen -t rsa -b 4096 -C &quot;your_email@domain.com&quot;</code></p>
</li>
<li>
<p>Copy the public key file <code>Get-Content ~/.ssh/id_rsa.pub | clip</code></p>
</li>
<li>
<p>On Azure DevOps account settings add SSH public keys under security</p>
</li>
<li>
<p>Test SSH connection</p>
<p><code>ssh -T git@ssh.dev.azure.com</code></p>
</li>
<li>
<p>If it is successful, browse to Azure Repos and use SSH option to clone</p>
</li>
<li>
<p>However, if this unsuccessful, you may see some shell access error. It is possible your coprorate/VPN network does not allow SSH (port 22)</p>
<p>Use the https option to clone and use PAT.</p>
<p>i. On ADO under your account, generate new PAT with desired permissions.</p>
<p>ii. In my case, as mentioned in issue, I was having issues with ssh agent service. Turns out it was disabled.</p>
<p>Service Status check &ndash;&gt;</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-powershell" data-lang="powershell"><span style="display:flex;"><span>Get-service ssh-agent
</span></span></code></pre></div><p>Service start type check &ndash;&gt;</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-powershell" data-lang="powershell"><span style="display:flex;"><span>Get-Service ssh-agent | Select-Object StartType
</span></span></code></pre></div><p>In my case, it was Disabled</p>
<p>Change Service Start to Automatic &ndash;&gt;</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-powershell" data-lang="powershell"><span style="display:flex;"><span>Set-Service ssh-agent -StartupType Automatic
</span></span></code></pre></div><p>iii. Now, add the ssh key and PAT</p>
<p>list agent identities&ndash;&gt; cd ..ssh and <code>ssh-add -l</code></p>
<p>add ssh key &ndash;&gt; ssh-add <code>.\id.rsa</code> THis should display as identity and your name/email address</p>
<p>iv. Git Config -</p>
<p><em><code>git config --global credential.helper &quot;store --file ~/.git-credentials&quot;</code></em></p>
<p><em><code>git config --global user.name &quot;Name&quot;</code></em></p>
<p><em><code>git config --global user.email &quot;youremail@domain.com&quot;</code></em></p>
<p><em><code>git config --global credential.https://dev.azure.com.username PAT</code></em> Only update PAT the URL is correct</p>
<p>Now, clone ADO Repo using https method, it would prompt or pop-up browser and next time it should work seamlessly.</p>
</li>
</ol>
]]></content>
        </item>
        
        <item>
            <title>ADO Agent Installation for Windows VM in a secure environment</title>
            <link>https://rsatiwari.com/posts/ado-windowsagent/</link>
            <pubDate>Thu, 23 Feb 2023 02:26:31 +1100</pubDate>
            
            <guid>https://rsatiwari.com/posts/ado-windowsagent/</guid>
            <description>Scenario: You need to register a Windows Virtual machines as a deployment target in Azure DevOps Project. Also, the VMs are placed in a secure zone where files cannot be downloaded directly due to firewall restrictions. Hence, you cannot use the ADO default registration script to download the vsts agent and register it.
Steps to configure it -
Azure DevOps - Create a new Deployment Group eg. DG-External This is where the VMs will be registered.</description>
            <content type="html"><![CDATA[<p>Scenario: You need to register a Windows Virtual machines as a deployment target in Azure DevOps Project. Also, the VMs are placed in a secure zone where files cannot be downloaded directly due to firewall restrictions. Hence, you cannot use the ADO default registration script to download the vsts agent and register it.</p>
<p>Steps to configure it -</p>
<ol>
<li>Azure DevOps - Create a new Deployment Group eg. DG-External</li>
</ol>
<pre tabindex="0"><code>
    <img src="../images/ADO-IIS-DeploymentGroup.PNG"  class="left"  />


</code></pre><p>This is where the VMs will be registered.</p>
<ol start="2">
<li>Once the #1 is completed, you should see registration script something like below</li>
</ol>
<pre tabindex="0"><code>
    <img src="../images/ADO-Registration-Script.PNG"  class="left"  />


</code></pre><p>Use the copy option and since we are going to download manually ADO agent file (refer to step3), we need to modify this script.</p>
<p>Grab the last bit of the registration script, so it would be something like this</p>
<p><code>.\config.cmd --deploymentgroup --deploymentgroupname &quot;DG-External&quot; --agent $env:COMPUTERNAME --runasservice --work '_work' --url 'https://companyname.visualstudio.com/' --projectname 'ADO Project Name' --auth PAT --token xxxxxxxxxxxxxxxxxx</code></p>
<p>url &ndash;&gt; replace companyname with your relevent ADO</p>
<p>The rest are self explanatory, when you generate the registration script, PAT token is automatically generated, which is typically valid less than a day.</p>
<ol start="3">
<li>Now, download the ADO/vsts agent for windows from the below location</li>
</ol>
<p><a href="https://github.com/microsoft/azure-pipelines-agent/releases">https://github.com/microsoft/azure-pipelines-agent/releases</a></p>
<ol start="4">
<li>You may not need it, but for my scenario these VMs were clone and had previous ADO agent installed.</li>
</ol>
<p>To remove/unregister ADO agent <code>.\config.cmd remove --unattended</code> remember to run this from the location where previous install of ADO agent is, eg. C:\adoagent\A1</p>
<ol start="5">
<li>Once you have populated all the fields in code in step 2, start powershell and run it</li>
</ol>
<pre tabindex="0"><code>
    <img src="../images/registeradoclient01.PNG"  class="left"  />


</code></pre><p>You can either use the default account or if you have a service account use it here</p>
<pre tabindex="0"><code>
    <img src="../images/registeradoclient02.PNG"  class="left"  />


</code></pre><p>This should complete your registration steps.</p>
<p>Validate it in Azure DevOps Project deployment group and add any tags against this, it could be useful in pipeline</p>
]]></content>
        </item>
        
        <item>
            <title>Office365-Powershell</title>
            <link>https://rsatiwari.com/posts/azcmd1/</link>
            <pubDate>Fri, 10 Feb 2023 07:26:31 +1100</pubDate>
            
            <guid>https://rsatiwari.com/posts/azcmd1/</guid>
            <description>Although, I dont work much on AAD or IDAM side, there are times when I quickly need to refer to some details in Office365. Mainly due to someone is after this info, side effects of having GOD mode access&amp;hellip;.
End result I would like to run Get-MsolAccountSku i. Install MSOnline module on Windows Powershell, Install-Module MSOnline
ii. Connecto MSolService Connect-MsolService this would prompt for username and password. So if you work in Azure PIM environment, elevate your access first before running this cmdlet.</description>
            <content type="html"><![CDATA[<p>Although, I dont work much on AAD or IDAM side, there are times when I quickly need to refer to some details in Office365. Mainly due to someone is after this info, side effects of having GOD mode access&hellip;.</p>
<ol>
<li>End result I would like to run Get-MsolAccountSku</li>
</ol>
<p>i. Install MSOnline module on Windows Powershell, <code>Install-Module MSOnline</code></p>
<p>ii. Connecto MSolService <code>Connect-MsolService</code> this would prompt for username and password. So if you work in Azure PIM environment, elevate your access first before running this cmdlet.</p>
<p>iii. Now, <code>Get-MsolAccountSku</code> and similar cmdlets to get desired information</p>
]]></content>
        </item>
        
        <item>
            <title>ADO CLI and Variables List</title>
            <link>https://rsatiwari.com/posts/ado-cli-exportvariables/</link>
            <pubDate>Wed, 01 Feb 2023 07:26:31 +1100</pubDate>
            
            <guid>https://rsatiwari.com/posts/ado-cli-exportvariables/</guid>
            <description>Scenario:
I wanted to export a long list of variables defined in release pipeline in Azure DevOps. This was on classic GUI based pipeline. I wanted to understand the values it was populated. If you have similar challenge, the below solution may help you.
One Possible Solution:
I am sure there may be another way to work through this solution. The way I got the results was using the below steps -</description>
            <content type="html"><![CDATA[<p>Scenario:</p>
<p>I wanted to export a long list of variables defined in release pipeline in Azure DevOps. This was on classic GUI based pipeline. I wanted to understand the values it was populated. If you have similar challenge, the below solution may help you.</p>
<p>One Possible Solution:</p>
<p>I am sure there may be another way to work through this solution. The way I got the results was using the below steps -</p>
<p>Classic UI Screenshot for a release pipeline with variables -</p>

    <img src="../images/ado-variables-gui.PNG"  class="left"  />


<ol>
<li>
<p>I used Azure Cloud Shell to install the devops extension <code>az devops extension install</code></p>
</li>
<li>
<p>Login to azure <code>az login</code> and I dont think context matter in this scenario.</p>
</li>
<li>
<p>Run the following command to see the output on console</p>
</li>
</ol>
<p><code>az pipelines release definition show --name &quot;Name of the pipeline&quot; --org https://dev.azure.com/typically-companyname/ --project &quot;ADO Project Name&quot;</code></p>
<ol start="4">
<li>Validate the #3 command works correctly, to export it in a file format</li>
</ol>
<p><code>az pipelines release definition show --name &quot;Name of the pipeline&quot; --org https://dev.azure.com/typically-companyname/ --project &quot;ADO Project Name&quot; --output json &gt; pipelinenamevars.json</code></p>
<p>Change pipelinenamevars.json to your desired name .json</p>
]]></content>
        </item>
        
        <item>
            <title>Terraform-quick-notes</title>
            <link>https://rsatiwari.com/posts/terraform-quick-notes/</link>
            <pubDate>Wed, 11 Jan 2023 07:26:31 +1100</pubDate>
            
            <guid>https://rsatiwari.com/posts/terraform-quick-notes/</guid>
            <description>It has been a while since I used Terraform, recently I wanted to refresh my memory.
So, I started creating some basic infra in Azure and ADO pipelines.
This is for a quick reference -
One way to structure TF files, you can also add providers etc in a separate file. Remember to add .gitignore for TF files
Commands to create Infra using TF
terraform init
terraform plan --var-file=filename.tfvars &amp;ndash;var-file is optional and depends on your folder structure</description>
            <content type="html"><![CDATA[<p>It has been a while since I used Terraform, recently I wanted to refresh my memory.</p>
<p>So, I started creating some basic infra in Azure and ADO pipelines.</p>
<p>This is for a quick reference -</p>
<ol>
<li>One way to structure TF files, you can also add providers etc in a separate file.</li>
</ol>

    <img src="../images/Terraform-quick-notes-01.PNG"  class="left"  />


<ol start="2">
<li>
<p>Remember to add .gitignore for TF files</p>
</li>
<li>
<p>Commands to create Infra using TF</p>
</li>
</ol>
<p><code>terraform init</code></p>
<p><code>terraform plan --var-file=filename.tfvars</code> &ndash;var-file is optional and depends on your folder structure</p>
<p><code>terraform apply --var-file=filename.tfvars</code></p>
<p>If you are just starting out and see lot of errors in previous runs, my troubleshooting is to get rid of terraform files and do init and try again. Ofcourse, this is lab so take caution for Production environment.</p>
<h3 id="my-usecase">My usecase:</h3>
<p>To create AKS cluster. To create AKS you would first need to create the following -
- Virtual Network
- Log Analytics (Optional)
- AKS Cluster</p>
<p>Also, to use Azure Storage for TF state file.</p>
<h4 id="my-learnings--">My learnings -</h4>
<ol>
<li>
<p>Structure folder something like</p>
<p>Root folder &ndash;&gt;TF/Terraform and Subfolders</p>
<ul>
<li>AKS</li>
<li>LogAnalyticsWorkSpace</li>
<li>VirtualNetwork</li>
</ul>
</li>
</ol>
<p>Also, a pre-requisite would be creating a resource group, storage account and container to hold state file.</p>
<ol start="2">
<li>Run TF in the following sequence. Change Directory to each subfolder and <em><code>terraform apply</code></em>
<ul>
<li>VirtualNetwork</li>
<li>LogAnalyticsWorkSpace</li>
<li>AKS</li>
</ul>
</li>
</ol>
<p>An important thing to note - Create separate folders for the above with .gitignore (terraform) for all and ensure state filename are all unique eg. virtualnetwork - vnettfstate, aks - akstfstate, otherwise the previous step will teardown your environment.</p>
<p>Also, this might be handy to check currently supported AKS cluster version <code>az aks get-versions --location australiaeast -o table</code></p>
]]></content>
        </item>
        
        <item>
            <title>Github, Azure Repos and SSH Authentication</title>
            <link>https://rsatiwari.com/posts/sourcecode-ssh/</link>
            <pubDate>Tue, 10 Jan 2023 07:00:21 +1100</pubDate>
            
            <guid>https://rsatiwari.com/posts/sourcecode-ssh/</guid>
            <description>I often need to setup ssh authentication to access repos (github/azure repos). This is a quick post to keep all that information handy.
On your local machine (using bash prompt), run the below command to generate key. You can add a passphrase which improves or adds another layer of security. ssh-keygen -t rsa -b 4096 -C &amp;quot;your_email@example.com&amp;quot;
This should generate two files id_rsa and id_rsa.pub. Remember to keep id_rsa safe and dont accidentially copy this in source code or any publicly accessible endpoint.</description>
            <content type="html"><![CDATA[<p>I often need to setup ssh authentication to access repos (github/azure repos). This is a quick post to keep all that information handy.</p>
<ol>
<li>On your local machine (using bash prompt), run the below command to generate key. You can add a passphrase which improves or adds another layer of security.</li>
</ol>
<p><code>ssh-keygen -t rsa -b 4096 -C &quot;your_email@example.com&quot;</code></p>
<p>This should generate two files id_rsa and id_rsa.pub. Remember to keep id_rsa safe and dont accidentially copy this in source code or any publicly accessible endpoint.</p>
<ol start="2">
<li>On Github or Azure DevOps Repo add the contents of id_rsa.pub</li>
</ol>
<p>Adding new SSH key in Azure DevOps -</p>

    <img src="../images/ado-ssh01.PNG"  class="left"  />


<p>Adding new SSH key in Github -</p>
<pre tabindex="0"><code>
    <img src="../images/github-ssh01.PNG"  class="left"  />


</code></pre><p>Select New Key and add the contents of id_rsa.pub here.</p>
<p>When you clone your repo, the first time it will ask for authentication and it is added to known_hosts file.</p>
<ol start="3">
<li>Before you run git clone (Azure repos in my case), change the default https to ssh.</li>
</ol>
<pre tabindex="0"><code>
    <img src="../images/azurerepos-ssh-clone.PNG"  class="left"  />


</code></pre>]]></content>
        </item>
        
        <item>
            <title>LoadBalance a service using Netscaler</title>
            <link>https://rsatiwari.com/posts/services-netscaler/</link>
            <pubDate>Thu, 10 Mar 2022 07:26:31 +1100</pubDate>
            
            <guid>https://rsatiwari.com/posts/services-netscaler/</guid>
            <description>I am no expert in Netscaler. However, I have been in situations where I had to figure out and place few services behind Netscaler. Since it was Non-production environment, I thought I might as well try and learn. Here is my version of steps that needs to be performed.
Scenario: You have a external and internal service and you need to secure the external service using SSL and place both services behind Netscaler.</description>
            <content type="html"><![CDATA[<p>I am no expert in Netscaler. However, I have been in situations where I had to figure out and place few services behind Netscaler. Since it was Non-production environment, I thought I might as well try and learn. Here is my version of steps that needs to be performed.</p>
<p>Scenario: You have a external and internal service and you need to secure the external service using SSL and place both services behind Netscaler.</p>
<p>Just a simple diagram to show my use case</p>

    <img src="../images/Services-Netscaler01.PNG"  class="left"  />


<p>At a high-level I typically follow these steps -</p>
<ol>
<li>Create Servers in Netscaler. These are the VMs or backend pool resources</li>
</ol>

    <img src="../images/Netscaler-Config01.PNG"  class="left"  />


<ol start="2">
<li>Create Service Group. So, in reference to the above diagram, there would be two service group.</li>
</ol>
<p>i. External Service Group</p>
<p>ii. Internal Service Group</p>
<p>This is a typical service group</p>

    <img src="../images/Netscaler-ServiceGP-Config01.PNG"  class="left"  />


<p>Service Group &ndash;&gt; Monitors</p>
<p>This can be a simple ping or can be a custom monitor to check a service health.</p>
<p>Example of Service Group simple monitor using ping -</p>

    <img src="../images/NetScaler-ServiceGP-Monitor.png"  class="left"  />


<p>Example of Service Group Custom monitor -</p>

    <img src="../images/NetScaler-ServiceGP-CustomMonitor.PNG"  class="left"  />


<ol start="3">
<li>Next, is the virtual server which is the loadbalancing virtual server (VIP). Here you assign loadbalancer IP, Port eg. 443 and secure it with Certificate. Also, the most important step is association with a service group.</li>
</ol>
<p>Sample load balancing virtual server</p>

    <img src="../images/NetScaler-VirtualServer-VIP.PNG"  class="left"  />


<p>Certiciate is a different process (refer below for Cert steps)</p>
<p>Thanks to Netscaler User Interface, it shows a high-level of steps need to be performed for Certificates.</p>

    <img src="../images/NetScaler-Cert-Config01.PNG"  class="left"  />


<p>i. Following the above steps, first create a key and then a CSR.</p>

    <img src="../images/NetScaler-Cert-Config02.PNG"  class="left"  />


<p>ii. Submit this to your certificate management tool eg. Venafi and generate a new certificate.</p>
<p>iii. Extract the certificate and grab the .crt and upload to NetScaler</p>
<p>iv. Now, you can bind the cert under Virtual server Certificate options.</p>

    <img src="../images/NetScaler-Cert-Bind.png"  class="left"  />


]]></content>
        </item>
        
    </channel>
</rss>
