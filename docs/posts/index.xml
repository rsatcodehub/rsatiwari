<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on rsatiwari-tech notes</title>
        <link>https://rsatcodehub.github.io/rsatiwari/posts/</link>
        <description>Recent content in Posts on rsatiwari-tech notes</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Thu, 23 Feb 2023 02:26:31 +1100</lastBuildDate>
        <atom:link href="https://rsatcodehub.github.io/rsatiwari/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>ADO Agent Installation for Windows VM in a secure environment</title>
            <link>https://rsatcodehub.github.io/rsatiwari/posts/ado-windowsagent/</link>
            <pubDate>Thu, 23 Feb 2023 02:26:31 +1100</pubDate>
            
            <guid>https://rsatcodehub.github.io/rsatiwari/posts/ado-windowsagent/</guid>
            <description>Scenario: You need to register a Windows Virtual machines as a deployment target in Azure DevOps Project. Also, the VMs are placed in a secure zone where files cannot be downloaded directly due to firewall restrictions. Hence, you cannot use the ADO default registration script to download the vsts agent and register it.
Steps to configure it -
Azure DevOps - Create a new Deployment Group eg. DG-External This is where the VMs will be registered.</description>
            <content type="html"><![CDATA[<p>Scenario: You need to register a Windows Virtual machines as a deployment target in Azure DevOps Project. Also, the VMs are placed in a secure zone where files cannot be downloaded directly due to firewall restrictions. Hence, you cannot use the ADO default registration script to download the vsts agent and register it.</p>
<p>Steps to configure it -</p>
<ol>
<li>Azure DevOps - Create a new Deployment Group eg. DG-External</li>
</ol>
<pre tabindex="0"><code>
    <img src="../images/ADO-IIS-DeploymentGroup.PNG"  class="left"  />


</code></pre><p>This is where the VMs will be registered.</p>
<ol start="2">
<li>Once the #1 is completed, you should see registration script something like below</li>
</ol>
<pre tabindex="0"><code>
    <img src="../images/ADO-Registration-Script.PNG"  class="left"  />


</code></pre><p>Use the copy option and since we are going to download manually ADO agent file (refer to step3), we need to modify this script.</p>
<p>Grab the last bit of the registration script, so it would be something like this</p>
<p><code>.\config.cmd --deploymentgroup --deploymentgroupname &quot;DG-External&quot; --agent $env:COMPUTERNAME --runasservice --work '_work' --url 'https://companyname.visualstudio.com/' --projectname 'ADO Project Name' --auth PAT --token xxxxxxxxxxxxxxxxxx</code></p>
<p>url &ndash;&gt; replace companyname with your relevent ADO</p>
<p>The rest are self explanatory, when you generate the registration script, PAT token is automatically generated, which is typically valid less than a day.</p>
<ol start="3">
<li>Now, download the ADO/vsts agent for windows from the below location</li>
</ol>
<p><a href="https://github.com/microsoft/azure-pipelines-agent/releases">https://github.com/microsoft/azure-pipelines-agent/releases</a></p>
<ol start="4">
<li>You may not need it, but for my scenario these VMs were clone and had previous ADO agent installed.</li>
</ol>
<p>To remove/unregister ADO agent <code>.\config.cmd remove --unattended</code> remember to run this from the location where previous install of ADO agent is, eg. C:\adoagent\A1</p>
<ol start="5">
<li>Once you have populated all the fields in code in step 2, start powershell and run it</li>
</ol>
<pre tabindex="0"><code>
    <img src="../images/registeradoclient01.PNG"  class="left"  />


</code></pre><p>You can either use the default account or if you have a service account use it here</p>
<pre tabindex="0"><code>
    <img src="../images/registeradoclient02.PNG"  class="left"  />


</code></pre><p>This should complete your registration steps.</p>
<p>Validate it in Azure DevOps Project deployment group and add any tags against this, it could be useful in pipeline</p>
]]></content>
        </item>
        
        <item>
            <title>Office365-Powershell</title>
            <link>https://rsatcodehub.github.io/rsatiwari/posts/azcmd1/</link>
            <pubDate>Fri, 10 Feb 2023 07:26:31 +1100</pubDate>
            
            <guid>https://rsatcodehub.github.io/rsatiwari/posts/azcmd1/</guid>
            <description>Although, I dont work much on AAD or IDAM side, there are times when I quickly need to refer to some details in Office365. Mainly due to someone is after this info, side effects of having GOD mode access&amp;hellip;.
End result I would like to run Get-MsolAccountSku i. Install MSOnline module on Windows Powershell, Install-Module MSOnline
ii. Connecto MSolService Connect-MsolService this would prompt for username and password. So if you work in Azure PIM environment, elevate your access first before running this cmdlet.</description>
            <content type="html"><![CDATA[<p>Although, I dont work much on AAD or IDAM side, there are times when I quickly need to refer to some details in Office365. Mainly due to someone is after this info, side effects of having GOD mode access&hellip;.</p>
<ol>
<li>End result I would like to run Get-MsolAccountSku</li>
</ol>
<p>i. Install MSOnline module on Windows Powershell, <code>Install-Module MSOnline</code></p>
<p>ii. Connecto MSolService <code>Connect-MsolService</code> this would prompt for username and password. So if you work in Azure PIM environment, elevate your access first before running this cmdlet.</p>
<p>iii. Now, <code>Get-MsolAccountSku</code> and similar cmdlets to get desired information</p>
]]></content>
        </item>
        
        <item>
            <title>ADO CLI and Variables List</title>
            <link>https://rsatcodehub.github.io/rsatiwari/posts/ado-cli-exportvariables/</link>
            <pubDate>Wed, 01 Feb 2023 07:26:31 +1100</pubDate>
            
            <guid>https://rsatcodehub.github.io/rsatiwari/posts/ado-cli-exportvariables/</guid>
            <description>Scenario:
I wanted to export a long list of variables defined in release pipeline in Azure DevOps. This was on classic GUI based pipeline. I wanted to understand the values it was populated. If you have similar challenge, the below solution may help you.
One Possible Solution:
I am sure there may be another way to work through this solution. The way I got the results was using the below steps -</description>
            <content type="html"><![CDATA[<p>Scenario:</p>
<p>I wanted to export a long list of variables defined in release pipeline in Azure DevOps. This was on classic GUI based pipeline. I wanted to understand the values it was populated. If you have similar challenge, the below solution may help you.</p>
<p>One Possible Solution:</p>
<p>I am sure there may be another way to work through this solution. The way I got the results was using the below steps -</p>
<p>Classic UI Screenshot for a release pipeline with variables -</p>

    <img src="../images/ado-variables-gui.PNG"  class="left"  />


<ol>
<li>
<p>I used Azure Cloud Shell to install the devops extension <code>az devops extension install</code></p>
</li>
<li>
<p>Login to azure <code>az login</code> and I dont think context matter in this scenario.</p>
</li>
<li>
<p>Run the following command to see the output on console</p>
</li>
</ol>
<p><code>az pipelines release definition show --name &quot;Name of the pipeline&quot; --org https://dev.azure.com/typically-companyname/ --project &quot;ADO Project Name&quot;</code></p>
<ol start="4">
<li>Validate the #3 command works correctly, to export it in a file format</li>
</ol>
<p><code>az pipelines release definition show --name &quot;Name of the pipeline&quot; --org https://dev.azure.com/typically-companyname/ --project &quot;ADO Project Name&quot; --output json &gt; pipelinenamevars.json</code></p>
<p>Change pipelinenamevars.json to your desired name .json</p>
]]></content>
        </item>
        
        <item>
            <title>Github, Azure Repos and SSH Authentication</title>
            <link>https://rsatcodehub.github.io/rsatiwari/posts/sourcecode-ssh/</link>
            <pubDate>Tue, 10 Jan 2023 07:00:21 +1100</pubDate>
            
            <guid>https://rsatcodehub.github.io/rsatiwari/posts/sourcecode-ssh/</guid>
            <description>I often need to setup ssh authentication to access repos (github/azure repos). This is a quick post to keep all that information handy.
On your local machine (using bash prompt), run the below command to generate key. You can add a passphrase which improves or adds another layer of security. ssh-keygen -C &amp;quot;youremail@email.com&amp;quot;
This should generate two files id_rsa and id_rsa.pub. Remember to keep id_rsa safe and dont accidentially copy this in source code or any publicly accessible endpoint.</description>
            <content type="html"><![CDATA[<p>I often need to setup ssh authentication to access repos (github/azure repos). This is a quick post to keep all that information handy.</p>
<ol>
<li>On your local machine (using bash prompt), run the below command to generate key. You can add a passphrase which improves or adds another layer of security.</li>
</ol>
<p><code>ssh-keygen -C &quot;youremail@email.com&quot;</code></p>
<p>This should generate two files id_rsa and id_rsa.pub. Remember to keep id_rsa safe and dont accidentially copy this in source code or any publicly accessible endpoint.</p>
<ol start="2">
<li>On Github or Azure DevOps Repo add the contents of id_rsa.pub</li>
</ol>
<p>Adding new SSH key in Azure DevOps -</p>

    <img src="../images/ado-ssh01.PNG"  class="left"  />


<p>Adding new SSH key in Github -</p>
<pre tabindex="0"><code>
    <img src="../images/github-ssh01.PNG"  class="left"  />


</code></pre><p>Select New Key and add the contents of id_rsa.pub here.</p>
<p>When you clone your repo, the first time it will ask for authentication and it is added to known_hosts file.</p>
<ol start="3">
<li>Before you run git clone (Azure repos in my case), change the default https to ssh.</li>
</ol>
<pre tabindex="0"><code>
    <img src="../images/azurerepos-ssh-clone.PNG"  class="left"  />


</code></pre>]]></content>
        </item>
        
    </channel>
</rss>
